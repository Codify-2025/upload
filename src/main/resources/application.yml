server:
  port: ${PORT:8088}

spring:
  application:
    name: upload
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_SCHEMA}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  data:
    mongodb:
      uri: mongodb+srv://${MONGO_USERNAME}:${MONGO_PASSWORD}@codify.mongocluster.cosmos.azure.com/codify_processing?tls=true&authSource=admin&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000

  spring:
    rabbitmq:
      host: ${RABBITMQ_HOST}
      port: ${RABBITMQ_PORT}
      username: ${RABBITMQ_USERNAME}
      password: ${RABBITMQ_PASSWORD}
      virtual-host: /

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    generate-ddl: false

  cloud:
    discovery:
      enabled: false

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET_NAME}
    stack:
      auto: false
    region:
      static: ${AWS_REGION:ap-northeast-2}
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}


management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,beans,httptrace,metrics
        exclude: env,configprops,heapdump
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    prometheus:
      enabled: true
  health:
    readinessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  server:
    port: ${MANAGEMENT_PORT}

