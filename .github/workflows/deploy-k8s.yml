# ÏõåÌÅ¨ÌîåÎ°úÏö∞ Ïù¥Î¶Ñ
name: CI/CD for upload in k8s

# 1. Ïã§Ìñâ Ï°∞Í±¥: deploy-k8s Î∏åÎûúÏπòÏóê pushÍ∞Ä Î∞úÏÉùÌñàÏùÑ ÎïåÎßå Ïã§Ìñâ
on:
  push:
    branches: [ "deploy-k8s" ]

# ÏõåÌÅ¨ÌîåÎ°úÏö∞ Ï†ÑÏ≤¥ÏóêÏÑú ÏÇ¨Ïö©Ìï† ÌôòÍ≤Ω Î≥ÄÏàò

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.docker_build.outputs.image_tag }}
    env:
      TAG: ${{ github.run_id }} 
    permissions:
      contents: read
      packages: write # Docker Ïù¥ÎØ∏ÏßÄ Ìë∏ÏãúÎ•º ÏúÑÌï¥ ÌïÑÏöî

    steps:
      - name: 1. ÏÜåÏä§ ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v4

      - name: 2. JDK 17 ÏÑ§Ïπò
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 3. Gradle Ïã§Ìñâ Í∂åÌïú Î∂ÄÏó¨ Î∞è ÎπåÎìú
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
      - name: 4. Docker Hub Î°úÍ∑∏Ïù∏
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_PASSWORD }}

      - name: 5. ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ìë∏Ïãú
        id: docker_build
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          echo "Building and pushing image: ${{ env.IMAGE_NAME }}:$IMAGE_TAG"
          docker build -t ${{ secrets.DEPLOY_USERNAME }}/codify-upload:${{ env.TAG }} .
          docker push ${{ secrets.DEPLOY_USERNAME }}/codify-upload:${{ env.TAG }}
          echo "image_tag=${{ env.TAG }}" >> $GITHUB_OUTPUT
  # ============================================
  # CD Ìä∏Î¶¨Í±∞ Job (Îß§ÎãàÌéòÏä§Ìä∏ ÏóÖÎç∞Ïù¥Ìä∏)
  # ============================================
  
  deploy:
    # 'build-and-push' jobÏù¥ ÏÑ±Í≥µÌï¥ÏïºÎßå Ïã§ÌñâÎê®
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: 1. Îß§ÎãàÌéòÏä§Ìä∏ Î¶¨Ìè¨ÏßÄÌÜ†Î¶¨ Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v4
        with:
          repository: Codify-2025/k8s-manifests
          token: ${{ secrets.DEPLOY_PAT_TOKEN }}

      - name: 2. Deployment.yaml ÌååÏùºÏùò Ïù¥ÎØ∏ÏßÄ ÌÉúÍ∑∏ ÏóÖÎç∞Ïù¥Ìä∏
        working-directory: ./deploy/upload
        run: |
          sed -i "s|image: ${{ secrets.DEPLOY_USERNAME }}/codify-upload:.*|image: ${{ secrets.DEPLOY_USERNAME }}/codify-upload:${{ needs.build-and-push.outputs.image_tag }}|" deployment.yaml
      - name: 3. Î≥ÄÍ≤ΩÎêú Îß§ÎãàÌéòÏä§Ìä∏ Ïª§Î∞ã Î∞è Ìë∏Ïãú
        run: |
          git config --global user.name 'dylee00'
          git config --global user.email 'dylee6820@gmail.com'
          git add .
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
            echo "deployed=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Deploy: Update upload image to ${{ needs.build-and-push.outputs.image_tag }}"
            git push
            echo "deployed=true" >> $GITHUB_OUTPUT
          fi
      - name: 4. Discord Notification
        if: steps.commit_step.outputs.deployed == 'true'
        uses: Ilshidur/action-discord@0.3.2
        env: 
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DISCORD_USERNAME: DEPLOY_BOT
          DISCORD_AVATAR: https://github.com/pknu-wap/WAPP/blob/main/image/icon.png?raw=true
          DISCORD_EMBEDS: |  
            [
                  { 
                    "title": "üöÄ Î∞∞Ìè¨ ÏôÑÎ£å!",
                    "color": 65280,
                    "description": "${{ github.event.repository.name }} ÏÑúÎπÑÏä§Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Î∞∞Ìè¨ÎêòÏóàÏäµÎãàÎã§.",
                    "fields": [
                      {
                        "name": "Repository",
                        "value": "${{ github.event.repository.name }}",
                        "inline": true
                      },
                      {
                        "name": "Image Tag",
                        "value": "${{ needs.build-and-push.outputs.image_tag }}",
                        "inline": true
                      },
                      {
                        "name": "Actor",
                        "value": "${{ github.actor }}",
                        "inline": true
                      },
                      {
                        "name": "Commit",
                        "value": "[${{ github.sha }}](${{ github.event.repository.html_url }}/commit/${{ github.sha }})",
                        "inline": false
                      }
                    ],
                    "timestamp": "${{ github.event.head_commit.timestamp }}"
                  }
                ]
